{"name": "Test User Login DDT", "status": "broken", "statusDetails": {"message": "zipfile.BadZipFile: File is not a zip file", "trace": "self = <test_cases.test_user_login_ddt.Test_login_ddt object at 0x00000285877F2C90>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eb00e6a61382028d07b84b0db5f09266\")>\n\n    @allure.title('Test User Login DDT')\n    @allure.feature('Login Through DDT')\n    @allure.story('validating login with ddt')\n    @allure.description('testing_login_functionality')\n    @allure.issue('ABC-006')\n    @allure.link(url=\"--> https://admin-demo.nopcommerce.com\", name=\"--> nop_commerce\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_user_login_ddt(self, setup):\n        self.logs.info(\"Testcase 'test_user_login_ddt' has Started\")\n        self.driver = setup\n        self.logs.info('Opening the Browser')\n        self.lp = Login_page(self.driver)\n        self.rows = excel_methods.no_of_rows(self.excel_file_path, \"login_data\")\n        print(\"\\nnumber of rows in excel sheet are -->\" + str(self.rows))\n        testcase_status_list = []\n        for r in range(2, self.rows + 1):\n            self.email = excel_methods.read_data(self.excel_file_path, \"login_data\", r, 2)\n            self.password = excel_methods.read_data(self.excel_file_path, \"login_data\", r, 3)\n            self.expected_result = excel_methods.read_data(self.excel_file_path, \"login_data\", r, 4)\n            # print(\"row_number       --> \" + str(r))\n            # print(\"email            --> \" + self.email)\n            # print(\"password         --> \" + self.password)\n            # print(\"expected_result  --> \" + self.expected_result)\n            self.logs.info(\"Entering Email -->\" + self.email)\n            self.lp.email(self.email)\n            self.logs.info(\"Entering Password -->\" + self.password)\n            self.lp.password(self.password)\n            self.logs.info(\"Clicking on Login Button\")\n            self.lp.login_btn()\n            if self.lp.login_verification() == \"Login Passed\":\n                excel_methods.write_data(self.excel_file_path, \"login_data\", r, 5, \"pass\")\n                self.logs.info(\"Login Successful\")\n                self.logs.info(\"Entered into 'outer if block'\")\n                if self.expected_result == \"pass\":\n                    self.logs.info(\"Entered into 'inner if block' of 'outer if block' -->\" + self.expected_result)\n                    self.logs.info(\"Appending the list\")\n                    testcase_status_list.append(\"pass\")\n                    self.logs.info(\"Capturing Screenshot for Allure Report\")\n                    allure.attach(self.driver.get_screenshot_as_png(), name='test_user_login_ddt_passed',\n                                  attachment_type=AttachmentType.PNG)\n                    self.logs.info(\"Clicking on logout Button\")\n                    self.lp.logout_btn()\n                elif self.expected_result == \"fail\":\n                    self.logs.info(\"Entered into 'inner elif bloc of 'outer if block' -->\" + self.expected_result)\n                    self.logs.info(\"Appending the list\")\n                    testcase_status_list.append(\"fail\")\n            elif self.lp.login_verification() == \"Login Failed\":\n>               excel_methods.write_data(self.excel_file_path, \"login_data\", r, 5, \"fail\")\n\ntest_cases\\test_user_login_ddt.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutilities\\excel_methods.py:17: in write_data\n    excel_file = openpyxl.load_workbook(file_name)\nD:\\Pytest_params_DDt\\Lib\\site-packages\\openpyxl\\reader\\excel.py:344: in load_workbook\n    reader = ExcelReader(filename, read_only, keep_vba,\nD:\\Pytest_params_DDt\\Lib\\site-packages\\openpyxl\\reader\\excel.py:123: in __init__\n    self.archive = _validate_archive(fn)\nD:\\Pytest_params_DDt\\Lib\\site-packages\\openpyxl\\reader\\excel.py:95: in _validate_archive\n    archive = ZipFile(filename, 'r')\nC:\\Users\\nomul\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\zipfile.py:1302: in __init__\n    self._RealGetContents()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>\n\n    def _RealGetContents(self):\n        \"\"\"Read in the table of contents for the ZIP file.\"\"\"\n        fp = self.fp\n        try:\n            endrec = _EndRecData(fp)\n        except OSError:\n            raise BadZipFile(\"File is not a zip file\")\n        if not endrec:\n>           raise BadZipFile(\"File is not a zip file\")\nE           zipfile.BadZipFile: File is not a zip file\n\nC:\\Users\\nomul\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\zipfile.py:1369: BadZipFile"}, "description": "testing_login_functionality", "attachments": [{"name": "test_user_login_ddt_passed", "source": "cce23d87-bca3-4bf2-a025-2ad13299a973-attachment.png", "type": "image/png"}, {"name": "log", "source": "a0de0531-2bdb-4c69-b8d2-c95fdb9b519b-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "e829b774-4d6e-4471-972f-0dc9da47a638-attachment.txt", "type": "text/plain"}], "start": 1707391683372, "stop": 1707391719795, "uuid": "9dcc2882-3326-4d26-8264-52c04c3666bf", "historyId": "237b95c0a95d54f811041734108a5977", "testCaseId": "237b95c0a95d54f811041734108a5977", "fullName": "test_cases.test_user_login_ddt.Test_login_ddt#test_user_login_ddt", "labels": [{"name": "severity", "value": "critical"}, {"name": "story", "value": "validating login with ddt"}, {"name": "feature", "value": "Login Through DDT"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_user_login_ddt"}, {"name": "subSuite", "value": "Test_login_ddt"}, {"name": "host", "value": "LAPTOP-1DT8TVKR"}, {"name": "thread", "value": "8360-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_user_login_ddt"}], "links": [{"type": "link", "url": "--> https://admin-demo.nopcommerce.com", "name": "--> nop_commerce"}, {"type": "issue", "url": "ABC-006", "name": "ABC-006"}]}