{"name": "Add_Customer_Read_Write_Data", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF634615E42+3538674]\n\t(No symbol) [0x00007FF634234C02]\n\t(No symbol) [0x00007FF6340E5AEB]\n\t(No symbol) [0x00007FF63412BF4E]\n\t(No symbol) [0x00007FF63412C0CC]\n\t(No symbol) [0x00007FF63416E477]\n\t(No symbol) [0x00007FF63414F0EF]\n\t(No symbol) [0x00007FF63416BDE3]\n\t(No symbol) [0x00007FF63414EE53]\n\t(No symbol) [0x00007FF63411F514]\n\t(No symbol) [0x00007FF634120631]\n\tGetHandleVerifier [0x00007FF634646CAD+3738973]\n\tGetHandleVerifier [0x00007FF63469C506+4089270]\n\tGetHandleVerifier [0x00007FF634694823+4057299]\n\tGetHandleVerifier [0x00007FF634365C49+720121]\n\t(No symbol) [0x00007FF63424126F]\n\t(No symbol) [0x00007FF63423C304]\n\t(No symbol) [0x00007FF63423C432]\n\t(No symbol) [0x00007FF63422BD04]\n\tBaseThreadInitThunk [0x00007FFCB40C7344+20]\n\tRtlUserThreadStart [0x00007FFCB50026B1+33]", "trace": "self = <test_cases.test_add_customer_read_write_data.Test_add_customer object at 0x00000242C124B310>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b22fe23340e23a937f37ac1e940903b6\")>\n\n    @allure.title('Add_Customer_Read_Write_Data')\n    @allure.feature('Adding a New Customer By Reading Data and Writing it in excel')\n    @allure.story('validating add customer page')\n    @allure.description('testing_add_customer_page')\n    @allure.issue('TACRD-002')\n    @allure.link(url=\"--> https://admin-demo.nopcommerce.com\", name=\"--> nop_commerce\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_add_customer_read_write_data(self, setup):\n        self.log.info(\"Testcase test_add_customer_003 Started\")\n        self.log.info(\"Opening the Browser\")\n        self.driver = setup\n        self.log.info(\"Assigning Variable to Login_page\")\n        self.lp = Login_page(self.driver)\n        self.log.info(\"Assigning Variable to Add_customer_page\")\n        self.ac = Add_customer(self.driver)\n        self.log.info(\"Entering Email --> \" + self.email)\n        self.lp.email(self.email)\n        self.log.info(\"writing data into --> \" + self.excel_file_path)\n        excel_methods.write_data(self.excel_file_path, \"write_data\", 2, 2, self.email)\n        self.log.info(\"Entering Password --> \" + self.password)\n        self.lp.password(self.password)\n        self.log.info(\"writing data into --> \" + self.excel_file_path)\n        excel_methods.write_data(self.excel_file_path, \"write_data\", 3, 2, self.password)\n        self.log.info(\"Clicking Login Button\")\n        self.lp.login_btn()\n        self.log.info(\"Login Successful\")\n        self.log.info(\"Clicking 1st Customers Button\")\n        self.ac.customer_btn()\n        self.log.info(\"Clicking 2nd Customers Button\")\n        self.ac.customer_btn_1()\n        self.log.info(\"Clicking on Add Customer Button\")\n        self.ac.add_new_customer()\n        self.log.info(\"Landed on Add New Customer Page\")\n        email_1 = generate_email()\n        self.log.info(\"Entering Customer Email --> \" + email_1)\n        self.ac.customer_email(email_1)\n        self.log.info(\"writing data into --> \" + self.excel_file_path)\n        excel_methods.write_data(self.excel_file_path, \"write_data\", 4, 2, email_1)\n        password_1 = generate_password()\n        self.log.info(\"Entering Password --> \" + password_1)\n        self.ac.customer_password(password_1)\n        self.log.info(\"writing data into --> \" + self.excel_file_path)\n        excel_methods.write_data(self.excel_file_path, \"write_data\", 5, 2, password_1)\n        self.log.info(\"Entering First_name --> \" + self.first_name)\n        self.ac.first_name(self.first_name)\n        self.log.info(\"writing data into --> \" + self.excel_file_path)\n        excel_methods.write_data(self.excel_file_path, \"write_data\", 6, 2, self.first_name)\n        self.log.info(\"Entering Last_name --> \" + self.last_name)\n        self.ac.last_name(self.last_name)\n        self.log.info(\"writing data into --> \" + self.excel_file_path)\n        excel_methods.write_data(self.excel_file_path, \"write_data\", 7, 2, self.last_name)\n        gender = generate_gender()\n        self.log.info(\"Selecting Gender --> \" + gender)\n        self.ac.gender(gender)\n        self.log.info(\"writing data into --> \" + gender)\n        excel_methods.write_data(self.excel_file_path, \"write_data\", 8, 2, gender)\n        dob = generate_dob()\n        self.log.info(\"Entering Date of Birth --> \" + dob)\n        self.ac.date_of_birth(str(dob))\n        self.log.info(\"writing data into --> \" + dob)\n        excel_methods.write_data(self.excel_file_path, \"write_data\", 9, 2, dob)\n        self.log.info(\"Entering Company Name --> \" + self.company)\n        self.ac.company_name(self.company)\n        self.log.info(\"writing data into --> \" + self.excel_file_path)\n        excel_methods.write_data(self.excel_file_path, \"write_data\", 10, 2, self.company)\n        self.log.info(\"Clicking on Tax Button --> \" + self.uncheck)\n        self.ac.tax_check_box(self.uncheck)\n        self.log.info(\"writing data into --> \" + self.excel_file_path)\n        excel_methods.write_data(self.excel_file_path, \"write_data\", 11, 2, self.uncheck)\n        self.log.info(\"Clicking on News Letter Button\")\n>       self.ac.news_letter()\n\ntest_cases\\test_add_customer_read_write_data.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects\\add_customer_page.py:96: in news_letter\n    self.wait.until(ec.presence_of_element_located((By.XPATH, self.news_letter_by_xpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b22fe23340e23a937f37ac1e940903b6\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000242C14B2520>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF634615E42+3538674]\nE       \t(No symbol) [0x00007FF634234C02]\nE       \t(No symbol) [0x00007FF6340E5AEB]\nE       \t(No symbol) [0x00007FF63412BF4E]\nE       \t(No symbol) [0x00007FF63412C0CC]\nE       \t(No symbol) [0x00007FF63416E477]\nE       \t(No symbol) [0x00007FF63414F0EF]\nE       \t(No symbol) [0x00007FF63416BDE3]\nE       \t(No symbol) [0x00007FF63414EE53]\nE       \t(No symbol) [0x00007FF63411F514]\nE       \t(No symbol) [0x00007FF634120631]\nE       \tGetHandleVerifier [0x00007FF634646CAD+3738973]\nE       \tGetHandleVerifier [0x00007FF63469C506+4089270]\nE       \tGetHandleVerifier [0x00007FF634694823+4057299]\nE       \tGetHandleVerifier [0x00007FF634365C49+720121]\nE       \t(No symbol) [0x00007FF63424126F]\nE       \t(No symbol) [0x00007FF63423C304]\nE       \t(No symbol) [0x00007FF63423C432]\nE       \t(No symbol) [0x00007FF63422BD04]\nE       \tBaseThreadInitThunk [0x00007FFCB40C7344+20]\nE       \tRtlUserThreadStart [0x00007FFCB50026B1+33]\n\nD:\\Pytest_params_DDt\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "testing_add_customer_page", "attachments": [{"name": "log", "source": "f5a2011b-2699-4c30-8798-2e76fe22ce84-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "9a3dc0e4-78ea-4fc0-8368-03ab4b6583df-attachment.txt", "type": "text/plain"}], "start": 1707466640907, "stop": 1707466694196, "uuid": "d2eae9ab-8885-441f-907f-cadc48a8c2d9", "historyId": "ae96f7aab06814f0765d2b4f8cff0e48", "testCaseId": "ae96f7aab06814f0765d2b4f8cff0e48", "fullName": "test_cases.test_add_customer_read_write_data.Test_add_customer#test_add_customer_read_write_data", "labels": [{"name": "story", "value": "validating add customer page"}, {"name": "severity", "value": "critical"}, {"name": "feature", "value": "Adding a New Customer By Reading Data and Writing it in excel"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_add_customer_read_write_data"}, {"name": "subSuite", "value": "Test_add_customer"}, {"name": "host", "value": "LAPTOP-1DT8TVKR"}, {"name": "thread", "value": "2172-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_add_customer_read_write_data"}], "links": [{"type": "link", "url": "--> https://admin-demo.nopcommerce.com", "name": "--> nop_commerce"}, {"type": "issue", "url": "TACRD-002", "name": "TACRD-002"}]}