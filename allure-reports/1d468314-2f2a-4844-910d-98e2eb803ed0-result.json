{"name": "Test_User_Login_Params", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='Email']\"}\n  (Session info: chrome=121.0.6167.161); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF61D185E42+3538674]\n\t(No symbol) [0x00007FF61CDA4C02]\n\t(No symbol) [0x00007FF61CC55AEB]\n\t(No symbol) [0x00007FF61CC9BF4E]\n\t(No symbol) [0x00007FF61CC9C0CC]\n\t(No symbol) [0x00007FF61CCDE477]\n\t(No symbol) [0x00007FF61CCBF0EF]\n\t(No symbol) [0x00007FF61CCDBDE3]\n\t(No symbol) [0x00007FF61CCBEE53]\n\t(No symbol) [0x00007FF61CC8F514]\n\t(No symbol) [0x00007FF61CC90631]\n\tGetHandleVerifier [0x00007FF61D1B6CAD+3738973]\n\tGetHandleVerifier [0x00007FF61D20C506+4089270]\n\tGetHandleVerifier [0x00007FF61D204823+4057299]\n\tGetHandleVerifier [0x00007FF61CED5C49+720121]\n\t(No symbol) [0x00007FF61CDB126F]\n\t(No symbol) [0x00007FF61CDAC304]\n\t(No symbol) [0x00007FF61CDAC432]\n\t(No symbol) [0x00007FF61CD9BD04]\n\tBaseThreadInitThunk [0x00007FFCB40C7344+20]\n\tRtlUserThreadStart [0x00007FFCB50026B1+33]", "trace": "self = <test_cases.test_user_login_params.Test_user_login object at 0x000001C08A58BC90>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8fff33d8d49fc033bee895b3f22ecfcd\")>\ndata_for_login = ('admin@yourstore.com', 'admin1', 'fail')\n\n    @allure.title('Test_User_Login_Params')\n    @allure.feature('Login Through Params')\n    @allure.story('validating login with multiple parameters')\n    @allure.description('testing_login_functionality')\n    @allure.issue('ABC-005')\n    @allure.link(url=\"--> https://admin-demo.nopcommerce.com\", name=\"--> nop_commerce\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_login_with_params(self, setup, data_for_login):\n        self.logs.info(\"Testcase 'test_login_with_params' Started\")\n        self.logs.info(\"Opening the Browser\")\n        self.driver = setup\n        self.logs.info(\"Assigning Variable to Login Page\")\n        self.lp = Login_page(self.driver)\n        self.logs.info(\"Entering Email from Params -->\" + data_for_login[0])\n>       self.lp.email(data_for_login[0])\n\ntest_cases\\test_user_login_params.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects\\login_page.py:16: in email\n    self.driver.find_element(By.XPATH, self.email_by_xpath).clear()\nC:\\Users\\nomul\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\nomul\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C08A74C910>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF61CD9BD04]\\\\n\\\\tBaseThreadInitThunk [0x00007FFCB40C7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFCB50026B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='Email']\"}\nE         (Session info: chrome=121.0.6167.161); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF61D185E42+3538674]\nE       \t(No symbol) [0x00007FF61CDA4C02]\nE       \t(No symbol) [0x00007FF61CC55AEB]\nE       \t(No symbol) [0x00007FF61CC9BF4E]\nE       \t(No symbol) [0x00007FF61CC9C0CC]\nE       \t(No symbol) [0x00007FF61CCDE477]\nE       \t(No symbol) [0x00007FF61CCBF0EF]\nE       \t(No symbol) [0x00007FF61CCDBDE3]\nE       \t(No symbol) [0x00007FF61CCBEE53]\nE       \t(No symbol) [0x00007FF61CC8F514]\nE       \t(No symbol) [0x00007FF61CC90631]\nE       \tGetHandleVerifier [0x00007FF61D1B6CAD+3738973]\nE       \tGetHandleVerifier [0x00007FF61D20C506+4089270]\nE       \tGetHandleVerifier [0x00007FF61D204823+4057299]\nE       \tGetHandleVerifier [0x00007FF61CED5C49+720121]\nE       \t(No symbol) [0x00007FF61CDB126F]\nE       \t(No symbol) [0x00007FF61CDAC304]\nE       \t(No symbol) [0x00007FF61CDAC432]\nE       \t(No symbol) [0x00007FF61CD9BD04]\nE       \tBaseThreadInitThunk [0x00007FFCB40C7344+20]\nE       \tRtlUserThreadStart [0x00007FFCB50026B1+33]\n\nC:\\Users\\nomul\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "description": "testing_login_functionality", "attachments": [{"name": "log", "source": "72b957eb-bae7-4344-93bd-91836956c091-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "882a4e63-c6ae-40c9-bfc5-cc2cb87b9a67-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data_for_login", "value": "('admin@yourstore.com', 'admin1', 'fail')"}], "start": 1707464904262, "stop": 1707464910615, "uuid": "639f74e9-b216-44c7-b1bc-0fd144d3103a", "historyId": "b439811b197a06391d1489406eaaeb96", "testCaseId": "637901da7086999cee4ed610515a9e89", "fullName": "test_cases.test_user_login_params.Test_user_login#test_login_with_params", "labels": [{"name": "story", "value": "validating login with multiple parameters"}, {"name": "feature", "value": "Login Through Params"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_user_login_params"}, {"name": "subSuite", "value": "Test_user_login"}, {"name": "host", "value": "LAPTOP-1DT8TVKR"}, {"name": "thread", "value": "21700-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_user_login_params"}], "links": [{"type": "link", "url": "--> https://admin-demo.nopcommerce.com", "name": "--> nop_commerce"}, {"type": "issue", "url": "ABC-005", "name": "ABC-005"}]}